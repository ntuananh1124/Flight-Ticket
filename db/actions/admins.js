const express = require('express');
const router = express.Router();
const sql = require('mssql/msnodesqlv8');
const { dbConfig } = require('../dbConfig');

// üìÑ GET all admins
router.get('/', async (req, res) => {
try {
    await sql.connect(dbConfig);
    const result = await sql.query('SELECT * FROM Admins');
    res.json(result.recordset);
    } catch (err) {
    console.error('L·ªói khi l·∫•y danh s√°ch Admins:', err);
    res.status(500).send('L·ªói m√°y ch·ªß');
    }
});

// ‚ûï POST: T·∫°o m·ªõi admin
router.post('/', async (req, res) => {
const { username, password, role, id } = req.body;
try {
    await sql.connect(dbConfig);
    await sql.query(`INSERT INTO Admins (username, password, role, id) VALUES (${username}, ${password}, ${role}, ${id})`) ;
    res.status(201).send('Admin ƒë√£ ƒë∆∞·ª£c t·∫°o');
} catch (err) {
    console.error('L·ªói khi t·∫°o Admin:', err);
    res.status(500).send('L·ªói m√°y ch·ªß');
}
});

// üõ†Ô∏è PUT: C·∫≠p nh·∫≠t th√¥ng tin admin
// PUT /api/admins/:id
router.put('/:id', async (req, res) => {
    const { id } = req.params;
    const { username, password, role } = req.body;

    if (!username || !password || !role) {
        return res.status(400).send('Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin');
    }

    try {
        await sql.connect(dbConfig);
        const request = new sql.Request();
        request.input('username', sql.NVarChar(50), username);
        request.input('password', sql.NVarChar(255), password);
        request.input('role', sql.NVarChar(20), role);
        request.input('admin_id', sql.Int, id);

        await request.query(`
            UPDATE Admins
            SET username = @username,
                password = @password,
                role = @role
            WHERE admin_id = @admin_id
        `);

        res.send('C·∫≠p nh·∫≠t Admin th√†nh c√¥ng');
    } catch (err) {
        console.error(err);
        res.status(500).send('L·ªói khi c·∫≠p nh·∫≠t Admin');
    }
});

// ‚ùå DELETE: Xo√° admin
router.delete('/:id', async (req, res) => {
const adminId = req.params.id;
try {
    await sql.connect(dbConfig);
    const result = await sql.query(`DELETE FROM Admins WHERE id = ${adminId}`) ;
    if (result.rowsAffected[0] === 0) {
        return res.status(404).send('Kh√¥ng t√¨m th·∫•y Admin');
}
    res.send('ƒê√£ xo√° Admin');
} catch (err) {
    console.error('L·ªói khi xo√° Admin:', err);
    res.status(500).send('L·ªói m√°y ch·ªß');
}
});

module.exports = router;